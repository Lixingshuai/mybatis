<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.UserMapper">
	<resultMap id="userMap" type="SysUser">
		<id property="id" column="id"/>
		<result property="userName" column="user_name"/>
		<result property="userPassword" column="user_password"/>
		<result property="userEmail" column="user_email"/>
		<result property="userInfo" column="user_info"/>
		<result property="headImg" column="head_img" jdbcType="BLOB"/>
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `sys_user` 
			(`id`, `user_name`, `user_password`, `user_email`, `user_info`, `head_img`, `create_time`) 
			VALUES 
			(#{id}, #{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg}, #{createTime});
	</insert>
	<delete id="deleteById">
		delete from sys_user where id = #{id} 
	</delete>
	
	<update id="updateEmailById">
		UPDATE sys_user SET user_email = #{userEmail} WHERE id = #{id}
	</update>
	
	<select id="selectById" resultMap="userMap">
		select * from sys_user where id = #{id}
	</select>
	<select id="selectAll" resultMap="userMap">
		select * from sys_user
	</select>
	<select id="selectRolesByUserId" resultType="SysRole">
		SELECT r.id id,r.role_name roleName,r.enabled,r.create_by createBy,r.create_time createTime,u.user_name as "user.userName",u.user_email as "user.userEmail" 
		FROM sys_role r 
		LEFT JOIN sys_user_role ur ON ur.role_id = r.id
		LEFT JOIN sys_user u ON u.id = ur.user_id
		WHERE u.id = #{id} 
	</select>
	
	<select id="selectRolesByUserIdAndEnabled" resultType="SysRole">
		SELECT 
			r.id id,
			r.role_name roleName,
			r.enabled,
			r.create_by createBy,
			r.create_time createTime
		FROM sys_user u
		LEFT JOIN sys_user_role ur ON u.id = ur.user_id
		LEFT JOIN sys_role r ON r.id = ur.role_id
		WHERE u.id = #{userId} AND r.enabled = #{enabled}
	</select>
	
	<select id="selectByUser" resultType="SysUser">
		select id,
			user_name userName,
			user_password userPassword,
			user_email userEmail,
			user_info userInfo,
			head_img headImg,
			create_time createTime
		from sys_user
		where 1 = 1
		<if test="userName != null and userName != ''">
			<bind name="name" value="'%'+userName+'%'"/>
			and user_name like #{name}
		</if>
		<if test="userEmail != null and userEmail != ''">
			and user_email = #{userEmail}
		</if>
	</select>
	
	<update id="updateByUser">
		update sys_user set
			<if test="userName != null and userName != ''">
				user_name = #{userName},
			</if>
			<if test="userInfo != null and userInfo !=''">
				user_info = #{userInfo},
			</if>
			id = #{id}
			where id = #{id}
	</update>
	
	
	<select id="selectByIdList" resultType="SysUser">
		select id,
			user_name userName,
			user_password userPassword,
			user_email userEmail,
			user_info userInfo,
			head_img headImg,
			create_time createTime
		from sys_user
		where id in 
		<foreach collection="list" open="(" close=")" separator="," item="id" index="i">
			#{id}
		</foreach>
	
	
	</select>
	
	
	
	
</mapper>